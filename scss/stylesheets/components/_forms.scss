// scss-lint:disable QualifyingElement, VendorPrefix

//
// Variables
//

$input-bg:                       $white !default;
$input-bg-disabled:              $base-background-color !default; // $g1

$input-color:                    $base-font-color !default;
$input-border-color:             $base-border-color !default;
$input-box-shadow:               none; // inset 0 1px 1px rgba($black,.075) !default;

$input-border-radius:            $base-border-radius !default;
// $input-border-radius-lg:         $border-radius-lg !default;
// $input-border-radius-sm:         $border-radius-sm !default;

$input-bg-focus:                 $input-bg !default;
$input-border-color-focus:       $action-color !default;
$input-box-shadow-focus:         none !default;
$input-color-focus:              $input-color !default;

$input-border-color-hover:       $base-border-color-hover !default;

$input-color-placeholder:        $muted !default;

$input-height:                   (($btn-font-size * $input-btn-line-height) + ($input-padding-y * 2)) !default;
// $input-height-lg:                (($font-size-lg * $input-btn-line-height-lg) + ($input-padding-y-lg * 2)) !default;
// $input-height-sm:                (($font-size-sm * $input-btn-line-height-sm) + ($input-padding-y-sm * 2)) !default;

$input-transition:               border-color $base-transition-duration $base-transition-function, box-shadow $base-transition-duration $base-transition-function !default;

$form-text-margin-top:     4px !default;
$form-text-font-size:      map-get($text-sizes, sm) !default; // 14px
$form-feedback-margin-top: $form-text-margin-top !default;

$form-check-margin-bottom:  4px !default;
$form-check-input-gutter:   22px !default;
$form-check-input-margin-y: 0.25rem !default;
$form-check-input-margin-x: 0.25rem !default;

$form-check-inline-margin-x: 15px !default;

$form-group-margin-bottom:       map-get($spacers, 20) !default; // 20px

$input-group-addon-bg:           $base-background-color !default; // $g1
$input-group-addon-border-color: $input-border-color !default;

$custom-control-gutter:   1.5rem !default;
$custom-control-spacer-y: 0.25rem !default;
$custom-control-spacer-x: 1rem !default;

$custom-control-indicator-size:       1rem !default;
$custom-control-indicator-bg:         #ddd !default;
$custom-control-indicator-bg-size:    50% 50% !default;
$custom-control-indicator-box-shadow: inset 0 0.25rem 0.25rem rgba(0, 0, 0, 0.1) !default;

$custom-control-disabled-indicator-bg:       $base-background-color !default; // $g1
$custom-control-disabled-description-color:  $muted !default;

$custom-control-checked-indicator-color:      $white !default;
$custom-control-checked-indicator-bg:         $action-color !default;
$custom-control-checked-indicator-box-shadow: none !default;

$custom-control-focus-indicator-box-shadow: 0 0 0 1px $base-background-color, 0 0 0 3px $action-color !default;

$custom-control-active-indicator-color:      $white !default;
$custom-control-active-indicator-bg:         lighten($action-color, 35%) !default;
$custom-control-active-indicator-box-shadow: none !default;

$custom-checkbox-radius: $base-border-radius !default;
$custom-checkbox-checked-icon: str-replace(url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='#{$custom-control-checked-indicator-color}' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E"), "#", "%23") !default;

$custom-checkbox-indeterminate-bg: $action-color !default;
$custom-checkbox-indeterminate-indicator-color: $custom-control-checked-indicator-color !default;
$custom-checkbox-indeterminate-icon: str-replace(url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 4 4'%3E%3Cpath stroke='#{$custom-checkbox-indeterminate-indicator-color}' d='M0 2h4'/%3E%3C/svg%3E"), "#", "%23") !default;
$custom-checkbox-indeterminate-box-shadow: none !default;

$custom-radio-radius: 50% !default;
$custom-radio-checked-icon: str-replace(url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3E%3Ccircle r='3' fill='#{$custom-control-checked-indicator-color}'/%3E%3C/svg%3E"), "#", "%23") !default;

$custom-select-padding-y:           $input-padding-y !default;
$custom-select-padding-x:           $input-padding-x !default;
$custom-select-indicator-padding:   $input-padding-x !default; // Extra padding to account for the presence of the background-image based indicator
$custom-select-line-height:         $input-btn-line-height !default;
$custom-select-color:               $input-color !default;
$custom-select-disabled-color:      $muted !default;
$custom-select-bg:            $white !default;
$custom-select-disabled-bg:   $base-background-color !default;
$custom-select-bg-size:       15px 12px !default; // In pixels because image dimensions
$custom-select-indicator-color: $quiet !default;
$custom-select-indicator:     url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='1 6 19 10'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cpath d='M0 0h24v24H0z'/%3E%3Cpath fill='#{$custom-select-indicator-color}' fill-rule='nonzero' d='M16.39 8.39c.52-.52 1.365-.52 1.886 0 .52.52.52 1.365 0 1.886l-5.333 5.333c-.52.52-1.365.52-1.886 0l-5.333-5.335c-.52-.52-.52-1.365 0-1.885s1.365-.52 1.885 0L12 12.78l4.39-4.39z'/%3E%3C/g%3E%3C/svg%3E");
// $custom-select-indicator:     url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 4 5'%3E%3Cpath fill='#{$custom-select-indicator-color}' d='M2 0L0 2h4zm0 5L0 3h4z'/%3E%3C/svg%3E") !default;
$custom-select-border-width:  $input-btn-border-width !default;
$custom-select-border-color:  $input-border-color !default;
$custom-select-border-radius: $base-border-radius !default;

$custom-select-focus-border-color: $input-border-color-focus !default;
$custom-select-focus-box-shadow:   inset 0 1px 2px rgba(0, 0, 0, 0.075), 0 0 5px rgba($custom-select-focus-border-color, 0.5) !default;

$custom-select-sm-font-size:  75% !default;

$custom-file-height:           2.5rem !default;
$custom-file-width:            14rem !default;
$custom-file-focus-box-shadow: 0 0 0 0.075rem $white, 0 0 0 0.2rem $action-color !default;

$custom-file-padding-y:     1rem !default;
$custom-file-padding-x:     0.5rem !default;
$custom-file-line-height:   $base-line-height !default;
$custom-file-color:         $base-font-color !default;
$custom-file-bg:            $white !default;
$custom-file-border-width:  $base-border-width !default;
$custom-file-border-color:  $input-border-color !default;
$custom-file-border-radius: $base-border-radius !default;
$custom-file-box-shadow:    inset 0 0.2rem 0.4rem rgba(0, 0, 0, 0.05) !default;
$custom-file-button-color:  $custom-file-color !default;
$custom-file-button-bg:     $white !default;
$custom-file-text: (
  placeholder: (
    en: "Choose file..."
  ),
  button-label: (
    en: "Browse"
  )
) !default;

// Form validation icons
$form-icon-success-color: $green !default;
$form-icon-success: url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='#{$form-icon-success-color}' d='M2.3 6.73L.6 4.53c-.4-1.04.46-1.4 1.1-.8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2.7l-4 4.6c-.43.5-.8.4-1.1.1z'/%3E%3C/svg%3E") !default;

$form-icon-warning-color: $red !default;
$form-icon-warning: url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='#{$form-icon-warning-color}' d='M4.4 5.324h-.8v-2.46h.8zm0 1.42h-.8V5.89h.8zM3.76.63L.04 7.075c-.115.2.016.425.26.426h7.397c.242 0 .372-.226.258-.426C6.726 4.924 5.47 2.79 4.253.63c-.113-.174-.39-.174-.494 0z'/%3E%3C/svg%3E") !default;

$form-icon-danger-color: $red !default;
$form-icon-danger: url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='#{$form-icon-danger-color}' viewBox='-2 -2 7 7'%3E%3Cpath stroke='#{$form-icon-danger-color}' d='M0 0l3 3m0-3L0 3'/%3E%3Ccircle r='.5'/%3E%3Ccircle cx='3' r='.5'/%3E%3Ccircle cy='3' r='.5'/%3E%3Ccircle cx='3' cy='3' r='.5'/%3E%3C/svg%3E") !default;

//
// Textual form controls
//

.form-control {
  display: block;
  width: 100%;
  // // Make inputs at least the height of their button counterpart (base line-height + padding + border)
  height: $input-height;
  padding: $input-padding-y 16px;
  font-size: $base-font-size;
  line-height: $input-btn-line-height;
  color: $input-color;
  background-color: $input-bg;
  // Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214.
  background-image: none;
  background-clip: padding-box;
  border: $input-btn-border-width solid $input-border-color;

  // Note: This has no effect on <select>s in some browsers, due to the limited stylability of `<select>`s in CSS.
  @if $enable-rounded {
    // Manually use the if/else instead of the mixin to account for iOS override
    border-radius: $input-border-radius;
  }

  @else {
    // Otherwise undo the iOS default
    border-radius: 0;
  }

  // @include box-shadow($input-box-shadow);
  @include transition($input-transition);

  // Unstyle the caret on `<select>`s in IE10+.
  &::-ms-expand {
    background-color: transparent;
    border: 0;
  }

  @include form-control-hover();

  // Customize the `:focus` state to imitate native WebKit styles.
  @include form-control-focus();

  // Placeholder
  &::placeholder {
    color: $input-color-placeholder;
    // Override Firefox's unusual default opacity; see https://github.com/twbs/bootstrap/pull/11526.
    opacity: 1;
  }

  // Disabled and read-only inputs
  //
  // HTML5 says that controls under a fieldset > legend:first-child won't be
  // disabled if the fieldset is disabled. Due to implementation difficulty, we
  // don't honor that edge case; we style them as disabled anyway.
  &:disabled {
    cursor: not-allowed;
    opacity: 0.5;
  }

  &:disabled,
  &[readonly] {
    background-color: $input-bg-disabled;
    // iOS fix for unreadable disabled content; see https://github.com/twbs/bootstrap/issues/11655.
    opacity: 1;
  }
}

select.form-control {
  &:not([size]):not([multiple]) {
    $select-border-width: ($base-border-width * 2);

    height: calc(#{$input-height} + #{$select-border-width});
  }

  &:focus::-ms-value {
    // Suppress the nested default white text on blue background highlight given to
    // the selected option text when the (still closed) <select> receives focus
    // in IE and (under certain conditions) Edge, as it looks bad and cannot be made to
    // match the appearance of the native widget.
    // See https://github.com/twbs/bootstrap/issues/19398.
    color: $input-color;
    background-color: $input-bg;
  }
}

// Make file inputs better match text inputs by forcing them to new lines.
.form-control-file,
.form-control-range {
  display: block;
}

//
// Labels
//

// For use with horizontal and inline forms, when you need the label text to
// align with the form controls.
.col-form-label {
  padding-top: calc(#{$input-padding-y} - #{$input-btn-border-width} * 2);
  padding-bottom: calc(#{$input-padding-y} - #{$input-btn-border-width} * 2);
  margin-bottom: 0; // Override the `<label>` default
}

// .col-form-label-lg {
//   padding-top: calc(#{$input-padding-y-lg} - #{$input-btn-border-width} * 2);
//   padding-bottom: calc(#{$input-padding-y-lg} - #{$input-btn-border-width} * 2);
//   font-size: $font-size-lg;
// }

// .col-form-label-sm {
//   padding-top: calc(#{$input-padding-y-sm} - #{$input-btn-border-width} * 2);
//   padding-bottom: calc(#{$input-padding-y-sm} - #{$input-btn-border-width} * 2);
//   font-size: $font-size-sm;
// }

//
// Legends
//

// For use with horizontal and inline forms, when you need the legend text to
// be the same size as regular labels, and to align with the form controls.
.col-form-legend {
  padding-top: $input-padding-y;
  padding-bottom: $input-padding-y;
  margin-bottom: 0;
  font-size: $base-font-size;
}

// Static form control text
//
// Apply class to an element to make any string of text align with labels in a
// horizontal form layout.

.form-control-static {
  padding-top: $input-padding-y;
  padding-bottom: $input-padding-y;
  margin-bottom: 0; // match inputs if this class comes on inputs with default margins
  line-height: $input-btn-line-height;
  border: solid transparent;
  border-width: $input-btn-border-width 0;

  // &.form-control-sm,
  // &.form-control-lg {
  //   padding-right: 0;
  //   padding-left: 0;
  // }
}

// Form control sizing
//
// Build on `.form-control` with modifier classes to decrease or increase the
// height and font-size of form controls.
//
// The `.form-group-* form-control` variations are sadly duplicated to avoid the
// issue documented in https://github.com/twbs/bootstrap/issues/15074.

// .form-control-sm {
//   padding: $input-padding-y-sm $input-btn-padding-x-sm;
//   font-size: $font-size-sm;
//   line-height: $input-btn-line-height-sm;
//   @include border-radius($input-border-radius-sm);
// }

// select.form-control-sm {
//   &:not([size]):not([multiple]) {
//     $select-border-width: ($border-width * 2);
//     height: calc(#{$input-height-sm} + #{$select-border-width});
//   }
// }

// .form-control-lg {
//   padding: $input-padding-y-lg $input-btn-padding-x-lg;
//   font-size: $font-size-lg;
//   line-height: $input-btn-line-height-lg;
//   @include border-radius($input-border-radius-lg);
// }

// select.form-control-lg {
//   &:not([size]):not([multiple]) {
//     $select-border-width: ($border-width * 2);
//     height: calc(#{$input-height-lg} + #{$select-border-width});
//   }
// }

// Form groups
//
// Designed to help with the organization and spacing of vertical forms. For
// horizontal forms, use the predefined grid classes.

.form-group {
  margin-bottom: $form-group-margin-bottom;
}

.form-text {
  display: block;
  font-size: $form-text-font-size;
  margin-top: $form-text-margin-top;
}

// Checkboxes and radios
//
// Indent the labels to position radios/checkboxes as hanging controls.

.form-check {
  position: relative;
  display: block;
  margin-bottom: $form-check-margin-bottom;

  &.disabled {
    .form-check-label {
      color: $muted;
      cursor: not-allowed;
    }
  }
}

.form-check-label {
  padding-left: $form-check-input-gutter;
  margin-bottom: 0; // Override default `<label>` bottom margin
  cursor: pointer;
}

.form-check-input {
  position: absolute;
  margin-top: $form-check-input-margin-y;
  margin-left: -$form-check-input-gutter;

  &:only-child {
    position: static;
  }
}

// Radios and checkboxes on same line
.form-check-inline {
  display: inline-block;

  .form-check-label {
    vertical-align: middle;
  }

  + .form-check-inline {
    margin-left: $form-check-inline-margin-x;
  }
}

// Form control feedback states
//
// Apply contextual and semantic states to individual form controls.

.form-control-feedback {
  margin-top: $form-feedback-margin-top;
  font-size: $form-text-font-size;
}

.form-control-success,
.form-control-warning,
.form-control-danger {
  padding-right: ($input-btn-padding-x * 3);
  background-repeat: no-repeat;
  background-position: center right ($input-height / 4);
  background-size: ($input-height / 2) ($input-height / 2);
}

// Form validation states
.has-success {
  @include form-control-validation($green);

  .form-control-success {
    background-image: $form-icon-success;
  }

  // &:before {
  //   content: '\e901'; // .hicon-check
  //   color: $green;
  //   display: block;
  //   font-family: 'gvara-icons';
  //   font-size: 16px;
  //   line-height: 1;
  //   position: absolute;
  //   right: 16px;
  //   top: 48%;
  //   z-index: 1;
  //   -webkit-transform: translateY(-50%);
  //   transform: translateY(-50%);
  // }
}

.has-warning {
  @include form-control-validation($red);

  .form-control-warning {
    background-image: $form-icon-warning;
  }
}

.has-danger {
  @include form-control-validation($red);

  .form-control-danger {
    background-image: $form-icon-danger;
  }
}

// Inline forms
//
// Make forms appear inline(-block) by adding the `.form-inline` class. Inline
// forms begin stacked on extra small (mobile) devices and then go inline when
// viewports reach <768px.
//
// Requires wrapping inputs and labels with `.form-group` for proper display of
// default HTML form controls and our custom form controls (e.g., input groups).

.form-inline {
  display: flex;
  flex-flow: row wrap;
  align-items: center; // Prevent shorter elements from growing to same height as others (e.g., small buttons growing to normal sized button height)

  // Because we use flex, the initial sizing of checkboxes is collapsed and
  // doesn't occupy the full-width (which is what we want for xs grid tier),
  // so we force that here.
  .form-check {
    width: 100%;
  }

  // Kick in the inline
  @include media-breakpoint-up(sm) {
    label {
      display: flex;
      align-items: center;
      justify-content: center;
      margin-bottom: 0;
    }

    // Inline-block all the things for "inline"
    .form-group {
      display: flex;
      flex: 0 0 auto;
      flex-flow: row wrap;
      align-items: center;
      margin-bottom: 0;
    }

    // Allow folks to *not* use `.form-group`
    .form-control {
      display: inline-block;
      width: auto; // Prevent labels from stacking above inputs in `.form-group`
      vertical-align: middle;
    }

    // Make static controls behave like regular ones
    .form-control-static {
      display: inline-block;
    }

    .input-group {
      width: auto;
    }

    .form-control-label {
      margin-bottom: 0;
      vertical-align: middle;
    }

    // Remove default margin on radios/checkboxes that were used for stacking, and
    // then undo the floating of radios and checkboxes to match.
    .form-check {
      display: flex;
      align-items: center;
      justify-content: center;
      width: auto;
      margin-top: 0;
      margin-bottom: 0;
    }

    .form-check-label {
      padding-left: 0;
    }

    .form-check-input {
      position: relative;
      margin-top: 0;
      margin-right: $form-check-input-margin-x;
      margin-left: 0;
    }

    // Custom form controls
    // .custom-control {
    //   display: flex;
    //   align-items: center;
    //   justify-content: center;
    //   padding-left: 0;
    // }
    // .custom-control-indicator {
    //   position: static;
    //   display: inline-block;
    //   margin-right: $form-check-input-margin-x; // Flexbox alignment means we lose our HTML space here, so we compensate.
    //   vertical-align: text-bottom;
    // }

    //     // Re-override the feedback icon.
    //     .has-feedback .form-control-feedback {
    //       top: 0;
    //     }
    //   }
    // }
  }
}

// Custom select

.custom-select {
  $select-border-width: ($custom-select-border-width * 2);

  display: inline-block;
  max-width: 100%;
  height: calc(#{$input-height} + #{$select-border-width});
  padding: $custom-select-padding-y ($custom-select-padding-x + $custom-select-indicator-padding) $custom-select-padding-y $custom-select-padding-x;
  line-height: $custom-select-line-height;
  color: $custom-select-color;
  vertical-align: middle;
  background: $custom-select-bg $custom-select-indicator no-repeat right $custom-select-padding-x center;
  background-size: $custom-select-bg-size;
  border: $custom-select-border-width solid $custom-select-border-color;
  appearance: none;

  @include border-radius($custom-select-border-radius);

  &:focus {
    @include box-shadow($custom-select-focus-box-shadow);

    border-color: $custom-select-focus-border-color;
    outline: none;

    &::-ms-value {
      // For visual consistency with other platforms/browsers,
      // supress the default white text on blue background highlight given to
      // the selected option text when the (still closed) <select> receives focus
      // in IE and (under certain conditions) Edge.
      // See https://github.com/twbs/bootstrap/issues/19398.
      color: $input-color;
      background-color: $input-bg;
    }
  }

  &:disabled {
    color: $custom-select-disabled-color;
    background-color: $custom-select-disabled-bg;
  }

  // Hides the default caret in IE11
  &::-ms-expand {
    opacity: 0;
  }
}
